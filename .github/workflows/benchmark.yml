name: Benchmark Pull Request
on:
  pull_request:
  repository_dispatch:
    types: [ reporters-db-pr ]


env:
  main: "$(/usr/bin/git log -1 --format='%H')"

jobs:
  benchmark:
    name: PR comment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
      - uses: snok/install-poetry@v1
        with:
          version: 1.2.0rc1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Setup variables I
        id: branch1
        run: |
          echo "event name is:" ${{ github.event_name }} 
          echo "event type is:" ${{ github.event.action }} 
          echo ${{ github.event.issue.pull_request }}
          echo ${{ github.event.issue.repository_dispatch }}
          echo "::set-output name=filepath::benchmark/${{ env.main }}.json"
          echo "::set-output name=hash::${{ env.main }}"

      - name: Curl and Install
        run: |
          curl https://storage.courtlistener.com/bulk-data/eyecite/tests/one-percent.csv.bz2 --output benchmark/bulk-file.csv.bz2
          poetry install --with benchmark --without dev

      - name: Run first benchmark
        run: |
          poetry run python benchmark/benchmark.py --branches ${{ steps.branch1.outputs.hash }}
          git stash --include-untracked

      - uses: actions/checkout@v3
        with:
          repository: flooie/pingme
          ref: main

      - name: Setup variables II
        id: branch2
        run: |
          echo "::set-output name=filepath::benchmark/${{ env.main }}.json"
          echo "::set-output name=hash::${{ env.main }}"

      - name: Run second benchmark
        run: |
          poetry install --with benchmark --without dev
          git stash pop
          poetry run python benchmark/benchmark.py --branches ${{ steps.branch1.outputs.hash }} ${{ steps.branch2.outputs.hash }} --pr ${{ github.event.number }}

      - name: Upload and Post Files to PR
        uses: gavv/pull-request-artifacts@v1.0.0
        with:
          repo-token: ${{ secrets.TOKEN }}
          commit: ${{ github.event.pull_request.head.sha }}
          repo: pingme
          artifacts-branch: artifacts
          artifacts-dir: benchmark
          artifacts: |
            benchmark/report.md
            benchmark/chart.png
            benchmark/output.csv
            ${{ steps.branch1.outputs.filepath }}
            ${{ steps.branch2.outputs.filepath }}

      - name: Add or Update PR Comment from Generated Report
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: benchmark/report.md

  dispatch:
    name: Reporters-DB-Dipatch
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
      - uses: snok/install-poetry@v1
        with:
          version: 1.2.0rc1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Create simple file
        run: |
          touch benchmark/newfile.txt 
          cd benchmark 
          ls
          cd ..

      - name: Upload and Post Files to PR
        uses: gavv/pull-request-artifacts@v1.0.0
        with:
          repo-token: ${{ secrets.TOKEN }}
          commit: ${{ github.event.pull_request.head.sha }}
          repo: crosspingme
          artifacts-branch: artifacts
          artifacts-dir: benchmark
          artifacts: |
            benchmark/newfile.txt 


#      - name: Setup variables I
#        id: branch1
#        run: |
#          echo ${{ github.event.client_payload.pr_number }}
#          curl https://storage.courtlistener.com/bulk-data/eyecite/tests/one-percent.csv.bz2 --output benchmark/bulk-file.csv.bz2
#          poetry install --with benchmark --without dev
#          poetry run python benchmark/benchmark.py --branches original
#          poetry run pip install "git+https://github.com/freelawproject/reporters-db.git@${{ github.event.client_payload.commit }}"
#          poetry run python benchmark/benchmark.py --branches original update --reporters --pr 1
#
#      - name: Add or Update PR Comment from Generated Report
#        uses: marocchino/sticky-pull-request-comment@v2
#        with:
#          recreate: true
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#          path: benchmark/report.md
#          number: ${{ github.event.client_payload.pr_number }}
#          repo: crosspingme
